// BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

within lichess_bot::components::Engine is

  package functions is
    @dialect("oal");
    @function_num(3);
    function init() is
      @noparse
      // load configuration properties
      select any bot from instances of Bot;
      if empty bot then
      	create object instance bot of Bot;
      	bot.config = PROP::loadProperties(file_name:"lichess_bot.properties");
      end if;
      
      Square::initialize();
      Piece::initialize();
      //Play::initialize();
      
      // connect to the Lichess API and start listening for events
      send chess::connect(properties: bot.config);
      
      LOG::LogInfo(message: "Initialization complete");
      @endnoparse
    end function;

    @dialect("oal");
    @function_num(4);
    function record_move(move: in instance of Move, 'from': in string) is
      @noparse
      move = param.move;
      from = param.from;
      LOG::LogInfo( message:"recording move from " + from + move.Notation );
      
      select one piece related by move->Piece[R5.'is reachable by'];
      select one start related by piece->OccupiedSquare[R2.'occupies'];
      //start = Move::from_square( move:move );
      //dest = Move::to_square( move:move );
      select any ocsq from instances of OccupiedSquare where false;  // decl
      unrelate piece from start across R2.'occupies';
      select one dest related by move->Square[R5.'can legally move to'];
      taken = dest.occupant();
      if (not_empty taken)
        select one ocsq related by dest->OccupiedSquare[R1];
        unrelate taken from ocsq across R2.'occupies';
        select one spec related by taken->PieceSpecification[R4.'is specified by'];
        LOG::LogInfo( message:"Capturing piece " + spec.Name + " on " + dest.lichess_desig );
        delete object instance taken;
      else
        create object instance ocsq of OccupiedSquare;
        relate ocsq to dest across R1;
      end if;
      relate piece to ocsq across R2.'occupies';
      // Castling? - the only time a King can move 2 squares along Rank 1 or 8.
      // lichess does not report the Rook's part in this; record it here to maintain ground truth.
      select one spec related by piece->PieceSpecification[R4.'is specified by'];
      if (spec.Name == "King")
      /*
        if (move.Notation == "e1g1")
          ::record_move( move:"h1f1", from:from + " O-O" );
        end if;
        if (move. == "e8g8")
          ::record_move( move:"h8f8", from:from + " O-O" );
        end if;
        // Queen side?
        if (move == "e1c1")
          ::record_move( move:"a1d1", from:from + " O-O" );
        end if;
        if (move == "e8c8")
          ::record_move( move:"a8d8", from:from + " O-O" );
        end if;
      */
      end if;
      @endnoparse
    end function;

    @dialect("oal");
    @function_num(1);
    function resign_all() is
      @noparse
      select many games from instances of ActiveGame;
      for each game in games 
      	game.resign();
      end for;
      @endnoparse
    end function;

    @dialect("oal");
    @function_num(2);
    function send_challenge() is
      @noparse
      r = chess::createChallenge(
      	user: "maia1",
      	rated: false,
      	clock_limit: 900,
      	clock_increment: 5,
      	color: Color::RANDOM,
      	variant: Variant::STANDARD,
      	fen: ""
      );
      @endnoparse
    end function;

  end package;

end;
